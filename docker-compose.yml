services:
  frontend:
    build:
      context: .
      dockerfile: docker/vue/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
  backend: # container hosting REST API and frontend using NodeJS, and Vue.JS
    build: 
        context: .
        dockerfile: docker/server/Dockerfile
        args:
          MONGODB: ${MONGODB}
          RESTPORT: ${RESTPORT}
          SALTROUND: ${SALTROUND}
    environment:
      - MONGODB=${MONGODB}
      - RESTPORT=${RESTPORT}
      - SALTROUND=${SALTROUND}
    ports:
      - "3033:3033"
    depends_on:
      - db
      - mq
    restart: unless-stopped
  db: # Backend MongoDB container
    build:
        context: ./docker/db
    ports:
      - "27017:27017" # Database Service
    volumes:
      - /data:/data/db
    restart: unless-stopped
  mq:
    build:
        context: ./docker/mq
    ports:
      - "5672:5672" # RabbitMQ Service
      - "15672:15672" # RabbitMQ Management plugin
    restart: unless-stopped
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 frontend
networks:
  default:
    driver: bridge